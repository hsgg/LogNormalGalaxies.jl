name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.7'
          - '1'
          #- 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - run: rm Manifest.toml  # julia-1.6 will fail with the newer manifest file
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/add-julia-registry@v1
        with:
          key: ${{ secrets.SSH_KEY }}
          registry: Wide-Angle-Team/WATCosmologyJuliaRegistry
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
#  docs:
#    name: Documentation
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: julia-actions/setup-julia@v1
#        with:
#          version: '1'
#      - run: pip install matplotlib
#      - uses: julia-actions/add-julia-registry@v1
#        with:
#          key: ${{ secrets.SSH_KEY }}
#          registry: Wide-Angle-Team/WATCosmologyJuliaRegistry
#      - run: |
#          julia --project=docs -e '
#            using Pkg
#            Pkg.develop(PackageSpec(path=pwd()))
#            Pkg.instantiate()'
#      - run: |
#          julia --project=docs -e '
#            using Documenter: DocMeta, doctest
#            using LogNormalGalaxies
#            DocMeta.setdocmeta!(LogNormalGalaxies, :DocTestSetup, :(using LogNormalGalaxies); recursive=true)
#            doctest(LogNormalGalaxies)'
#      - run: julia --project=docs docs/make.jl
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
